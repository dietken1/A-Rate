plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    enabled = true
    archiveBaseName = 'A-Rate'
    archiveVersion = '0.0.1-SNAPSHOT'
    manifest {
        attributes 'Main-Class': 'org.springframework.boot.loader.launch.JarLauncher'
        attributes 'Start-Class': 'com.example.arate.ARateApplication'
    }
}

jar {
    enabled = false
}

jib {
    from {
        image = 'eclipse-temurin:17-jre'
    }
    to {
        image = 'a-rate/backend'
        tags = [project.findProperty('jib.to.tags') ?: 'latest']
    }
    container {
        ports = ['8080']
        jvmFlags = ['-Xms512m', '-Xmx512m', '-Dspring.profiles.active=prod']
        environment = [SPRING_OUTPUT_ANSI_ENABLED: "ALWAYS"]
        labels = [version: project.version, name: project.name, group: project.group]
        format = 'Docker'
    }
}
